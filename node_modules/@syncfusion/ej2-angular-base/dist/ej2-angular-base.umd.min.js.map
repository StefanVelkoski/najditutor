{"version":3,"file":"ej2-angular-base.umd.min.js","sources":["../src/util.js","../src/template.js","../src/complex-array-base.js","../src/component-base.js","../src/form-base.js"],"sourcesContent":["import { EventEmitter } from '@angular/core';\n/**\n * Angular Utility Module\n */\n/* tslint:disable */\nexport function applyMixins(derivedClass, baseClass) {\n    baseClass.forEach(function (baseClass) {\n        Object.getOwnPropertyNames(baseClass.prototype).forEach(function (name) {\n            if (!derivedClass.prototype.hasOwnProperty(name) || baseClass.isFormBase) {\n                derivedClass.prototype[name] = baseClass.prototype[name];\n            }\n        });\n    });\n}\n/* tslint:disable */\nexport function ComponentMixins(baseClass) {\n    return function (derivedClass) {\n        applyMixins(derivedClass, baseClass);\n    };\n}\n/**\n * @private\n */\nexport function registerEvents(eventList, obj, direct) {\n    var ngEventsEmitter = {};\n    if (eventList && eventList.length) {\n        for (var _i = 0, eventList_1 = eventList; _i < eventList_1.length; _i++) {\n            var event_1 = eventList_1[_i];\n            if (direct === true) {\n                obj.propCollection[event_1] = new EventEmitter(false);\n                obj[event_1] = obj.propCollection[event_1];\n            }\n            else {\n                ngEventsEmitter[event_1] = new EventEmitter(false);\n            }\n        }\n        if (direct !== true) {\n            obj.setProperties(ngEventsEmitter, true);\n        }\n    }\n}\n/**\n * @private\n */\nexport function clearTemplate(_this, templateNames, index) {\n    var regTemplates = Object.keys(_this.registeredTemplate);\n    if (regTemplates.length) {\n        /* istanbul ignore next */\n        var regProperties = templateNames && templateNames.filter(function (val) {\n            return (/\\./g.test(val) ? false : true);\n        });\n        for (var _i = 0, _a = (regProperties && regProperties || regTemplates); _i < _a.length; _i++) {\n            var registeredTemplate = _a[_i];\n            /* istanbul ignore next */\n            if (index && index.length) {\n                for (var e = 0; e < index.length; e++) {\n                    for (var m = 0; m < _this.registeredTemplate.template.length; m++) {\n                        var value = _this.registeredTemplate.template[m].rootNodes[0];\n                        if (value === index[e]) {\n                            var rt = _this.registeredTemplate[registeredTemplate];\n                            rt[m].destroy();\n                        }\n                    }\n                }\n            }\n            else {\n                for (var _b = 0, _c = _this.registeredTemplate[registeredTemplate]; _b < _c.length; _b++) {\n                    var rt = _c[_b];\n                    if (!rt.destroyed) {\n                        if (rt._view) {\n                            var pNode = rt._view.renderer.parentNode(rt.rootNodes[0]);\n                            for (var m = 0; m < rt.rootNodes.length; m++) {\n                                pNode.appendChild(rt.rootNodes[m]);\n                            }\n                        }\n                        rt.destroy();\n                    }\n                }\n            }\n            delete _this.registeredTemplate[registeredTemplate];\n        }\n    }\n    var _loop_1 = function (tagObject) {\n        if (tagObject.instance) {\n            /* istanbul ignore next */\n            tagObject.instance.clearTemplate((templateNames && templateNames.filter(function (val) {\n                return (new RegExp(tagObject.name).test(val) ? true : false);\n            })));\n        }\n    };\n    for (var _d = 0, _e = _this.tagObjects; _d < _e.length; _d++) {\n        var tagObject = _e[_d];\n        _loop_1(tagObject);\n    }\n}\n/**\n * To set value for the nameSpace in desired object.\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @return {void}\n * @private\n */\nexport function setValue(nameSpace, value, object) {\n    var keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    /* istanbul ignore next */\n    var fromObj = object || {};\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (i + 1 === keys.length) {\n            fromObj[key] = value === undefined ? {} : value;\n        }\n        else if (fromObj[key] === undefined) {\n            fromObj[key] = {};\n        }\n        fromObj = fromObj[key];\n    }\n    return fromObj;\n}\n","import { setTemplateEngine, getTemplateEngine } from '@syncfusion/ej2-base';\nimport { setValue, getValue } from '@syncfusion/ej2-base';\nvar stringCompiler = getTemplateEngine();\n/**\n * Angular Template Compiler\n */\nexport function compile(templateEle, helper) {\n    if (typeof templateEle === 'string') {\n        return stringCompiler(templateEle, helper);\n    }\n    else {\n        var contRef_1 = templateEle.elementRef.nativeElement._viewContainerRef;\n        var pName_1 = templateEle.elementRef.nativeElement.propName;\n        //tslint:disable-next-line        \n        return function (data, component, propName) {\n            var context = { $implicit: data };\n            /* istanbul ignore next */\n            var conRef = contRef_1 ? contRef_1 : component.viewContainerRef;\n            var viewRef = conRef.createEmbeddedView(templateEle, context);\n            viewRef.markForCheck();\n            /* istanbul ignore next */\n            var viewCollection = component ?\n                component.registeredTemplate : getValue('currentInstance.registeredTemplate', conRef);\n            propName = propName ? propName : pName_1;\n            if (typeof viewCollection[propName] === 'undefined') {\n                viewCollection[propName] = [];\n            }\n            viewCollection[propName].push(viewRef);\n            return viewRef.rootNodes;\n        };\n    }\n}\n/**\n * Property decorator for angular.\n */\nexport function Template(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: setter(key),\n            get: getter(key, defaultValue),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, propertyDescriptor);\n    };\n}\nfunction setter(key) {\n    return function (val) {\n        if (val === undefined) {\n            return;\n        }\n        setValue(key + 'Ref', val, this);\n        if (typeof val !== 'string') {\n            val.elementRef.nativeElement._viewContainerRef = this.viewContainerRef;\n            val.elementRef.nativeElement.propName = key;\n        }\n        else {\n            if (this.saveChanges) {\n                this.saveChanges(key, val, undefined);\n                this.dataBind();\n            }\n        }\n    };\n}\nfunction getter(key, defaultValue) {\n    return function () {\n        /* istanbul ignore next */\n        return getValue(key + 'Ref', this) || defaultValue;\n    };\n}\n//tslint:disable-next-line\nsetTemplateEngine({ compile: compile });\n","import { getValue, setValue } from '@syncfusion/ej2-base';\nimport { clearTemplate, registerEvents } from './util';\nvar ComplexBase = /** @class */ (function () {\n    function ComplexBase() {\n        this.hasChanges = false;\n        this.initChange = false;\n        this.onChanges = true;\n        this.propCollection = {};\n        this.dataSource = {};\n        this.tags = [];\n        this.tagObjects = [];\n    }\n    ComplexBase.prototype.ngOnInit = function () {\n        this.registeredTemplate = {};\n        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var objInstance = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this);\n            if (objInstance) {\n                this.tagObjects.push({ instance: objInstance, name: tag });\n            }\n        }\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _b = 0, templateProperties_1 = templateProperties; _b < templateProperties_1.length; _b++) {\n            var tempName = templateProperties_1[_b];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n        // Angular 9 compatibility to overcome ngOnchange not get triggered issue\n        // To Update properties to \"this.propCollection\"\n        var propList = Object.keys(this);\n        /* istanbul ignore next */\n        if (this.directivePropList) {\n            for (var k = 0; k < this.directivePropList.length; k++) {\n                var dirPropName = this.directivePropList[k];\n                if (propList.indexOf(dirPropName) !== -1) {\n                    setValue(dirPropName, getValue(dirPropName, this), this.propCollection);\n                }\n            }\n            this.hasChanges = true;\n            this.initChange = true;\n            this.onChanges = false;\n        }\n    };\n    ComplexBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this, true);\n    };\n    ComplexBase.prototype.ngOnChanges = function (changes) {\n        for (var _i = 0, _a = Object.keys(changes); _i < _a.length; _i++) {\n            var propName = _a[_i];\n            var changedVal = changes[propName];\n            this.propCollection[propName] = changedVal.currentValue;\n        }\n        this.isUpdated = false;\n        this.hasChanges = true;\n    };\n    /* istanbul ignore next */\n    ComplexBase.prototype.clearTemplate = function (templateNames) {\n        clearTemplate(this, templateNames);\n    };\n    ComplexBase.prototype.getProperties = function () {\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            this.propCollection[tagObject.name] = tagObject.instance.getProperties();\n        }\n        return this.propCollection;\n    };\n    ComplexBase.prototype.isChanged = function () {\n        var result = this.hasChanges;\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.instance.hasChanges;\n        }\n        return result;\n    };\n    ComplexBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        // For angular 9 compatibility\n        // ngOnchange hook not get triggered for copmplex directive\n        // Due to this, we have manually set template properties v alues once we get template property reference\n        for (var _i = 0, templateProperties_2 = templateProperties; _i < templateProperties_2.length; _i++) {\n            var tempName = templateProperties_2[_i];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n    };\n    ComplexBase.prototype.ngAfterViewChecked = function () {\n        /* istanbul ignore next */\n        if (this.isUpdated) {\n            this.hasChanges = false;\n        }\n    };\n    return ComplexBase;\n}());\nexport { ComplexBase };\nvar ArrayBase = /** @class */ (function () {\n    function ArrayBase(propertyName) {\n        this.list = [];\n        this.hasChanges = false;\n        this.propertyName = propertyName;\n    }\n    ArrayBase.prototype.ngOnInit = function () {\n        this.isInitChanges = true;\n    };\n    ArrayBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        var index = 0;\n        /* istanbul ignore next */\n        this.list = this.children.map(function (child) {\n            child.index = index++;\n            child.property = _this.propertyName;\n            return child;\n        });\n        this.hasChanges = true;\n    };\n    ArrayBase.prototype.getProperties = function () {\n        var onlyProp = [];\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            onlyProp.push(item.getProperties());\n        }\n        return onlyProp;\n    };\n    ArrayBase.prototype.isChanged = function () {\n        var _this = this;\n        var result = false;\n        var index = 0;\n        var isSourceChanged = false;\n        // tslint:disable-next-line\n        var childrenDataSource = this.children.map(function (child) {\n            return child;\n        });\n        /* istanbul ignore next */\n        if (this.list.length === this.children.length) {\n            for (var i = 0; i < this.list.length; i++) {\n                if (!this.list[i].initChange) {\n                    var propList = Object.keys(this.list[i]);\n                    if (this.list[i].directivePropList) {\n                        for (var k = 0; k < this.list[i].directivePropList.length; k++) {\n                            var dirPropName = this.list[i].directivePropList[k];\n                            if (propList.indexOf(dirPropName) !== -1) {\n                                setValue(dirPropName, getValue(dirPropName, this.list[i]), this.list[i].propCollection);\n                                this.list[i].hasChanges = true;\n                                this.list[i].initChange = true;\n                                this.hasChanges = true;\n                            }\n                        }\n                    }\n                }\n                else if (!this.list[i].onChanges) {\n                    this.list[i].initChange = false;\n                }\n                if (this.list[i].propCollection.dataSource) {\n                    if (this.list[i].dataSource && this.list[i].propCollection.dataSource !== this.list[i].dataSource) {\n                        this.list[i].propCollection.dataSource = this.list[i].dataSource;\n                        this.list[i].hasChanges = true;\n                    }\n                    isSourceChanged = (JSON.stringify(this.list[i].propCollection.dataSource) !==\n                        JSON.stringify(childrenDataSource[i].propCollection.dataSource));\n                }\n                else {\n                    // tslint:disable-next-line\n                    var keys = Object.keys(this.list[i].propCollection);\n                    for (var j = 0; j < keys.length; j++) {\n                        if (this.list[i].propCollection[keys[j]] &&\n                            this.list[i].propCollection[keys[j]].constructor.name === 'TemplateRef_') {\n                            isSourceChanged = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        this.hasNewChildren = (this.list.length !== this.children.length || isSourceChanged) ? true : null;\n        if (this.hasNewChildren) {\n            this.list = this.children.map(function (child) {\n                child.index = index++;\n                child.property = _this.propertyName;\n                return child;\n            });\n        }\n        /* istanbul ignore end */\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.hasChanges;\n        }\n        return !!this.list.length && result;\n    };\n    ArrayBase.prototype.clearTemplate = function (templateNames) {\n        var _this = this;\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.clearTemplate(templateNames && templateNames.map(function (val) {\n                return new RegExp(_this.propertyName).test(val) ? val.replace(_this.propertyName + '.', '') : val;\n            }));\n        }\n    };\n    ArrayBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        for (var i = 0; i < this.list.length; i++) {\n            this.list[i].isUpdated = true;\n        }\n    };\n    ArrayBase.prototype.ngAfterViewInit = function () {\n        this.isInitChanges = false;\n    };\n    return ArrayBase;\n}());\nexport { ArrayBase };\n","/**\n * Angular Component Base Module\n */\nimport { getValue, isUndefined, setValue, isNullOrUndefined, attributes, createElement } from '@syncfusion/ej2-base';\nimport { EventEmitter } from '@angular/core';\nimport { clearTemplate, registerEvents } from './util';\nvar SVG_REG = /^svg|^path|^g/;\nvar ComponentBase = /** @class */ (function () {\n    function ComponentBase() {\n        this.isProtectedOnChange = true;\n    }\n    ComponentBase.prototype.saveChanges = function (key, newValue, oldValue) {\n        if (this.isProtectedOnChange) {\n            return;\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.finalUpdate();\n        // tslint:disable-next-line:no-any\n        var changeTime = setTimeout(this.dataBind.bind(this));\n        var clearUpdate = function () {\n            clearTimeout(changeTime);\n        };\n        this.finalUpdate = clearUpdate;\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngOnInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempOnThis = isTempRef || this;\n        tempOnThis.registeredTemplate = {};\n        tempOnThis.ngBoundedEvents = {};\n        tempOnThis.isAngular = true;\n        /* istanbul ignore next */\n        if (isTempRef) {\n            this.tags = isTempRef.tags;\n        }\n        tempOnThis.tags = this.tags || [];\n        tempOnThis.complexTemplate = this.complexTemplate || [];\n        tempOnThis.tagObjects = [];\n        tempOnThis.ngAttr = this.getAngularAttr(tempOnThis.element);\n        /* istanbul ignore next */\n        tempOnThis.createElement = function (tagName, prop) {\n            //tslint:disable-next-line\n            var ele = tempOnThis.srenderer ? tempOnThis.srenderer.createElement(tagName) : createElement(tagName);\n            if (typeof (prop) === 'undefined') {\n                return ele;\n            }\n            ele.innerHTML = (prop.innerHTML ? prop.innerHTML : '');\n            if (prop.className !== undefined) {\n                ele.className = prop.className;\n            }\n            if (prop.id !== undefined) {\n                ele.id = prop.id;\n            }\n            if (prop.styles !== undefined) {\n                ele.setAttribute('style', prop.styles);\n            }\n            if (tempOnThis.ngAttr !== undefined) {\n                ele.setAttribute(tempOnThis.ngAttr, '');\n            }\n            if (prop.attrs !== undefined) {\n                attributes(ele, prop.attrs);\n            }\n            return ele;\n        };\n        for (var _i = 0, _a = tempOnThis.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var tagObject = {\n                instance: getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tempOnThis),\n                name: tag\n            };\n            tempOnThis.tagObjects.push(tagObject);\n        }\n        var complexTemplates = Object.keys(tempOnThis);\n        complexTemplates = complexTemplates.filter(function (val) {\n            return /Ref$/i.test(val) && /\\_/i.test(val);\n        });\n        for (var _b = 0, complexTemplates_1 = complexTemplates; _b < complexTemplates_1.length; _b++) {\n            var tempName = complexTemplates_1[_b];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, tempOnThis), val);\n            tempOnThis.setProperties(val, true);\n        }\n    };\n    ComponentBase.prototype.getAngularAttr = function (ele) {\n        var attributes = ele.attributes;\n        var length = attributes.length;\n        var ngAr;\n        for (var i = 0; i < length; i++) {\n            /* istanbul ignore next */\n            if (/_ngcontent/g.test(attributes[i].name)) {\n                ngAr = attributes[i].name;\n            }\n        }\n        return ngAr;\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngAfterViewInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempAfterViewThis = isTempRef || this;\n        var regExp = /ejs-tab|ejs-accordion/g;\n        /* istanbul ignore next */\n        if (regExp.test(tempAfterViewThis.ngEle.nativeElement.outerHTML)) {\n            tempAfterViewThis.ngEle.nativeElement.style.visibility = 'hidden';\n        }\n        /**\n         * Root level template properties are not getting rendered,\n         * Due to ngonchanges not get triggered.\n         * so that we have set template value for root level template properties,\n         * for example: refer below syntax\n         * ```html\n         * <ejs-grid>\n         * <e-column></e-column>\n         * <ng-template #editSettingsTemplate></ng-template>\n         * </ejs-grid>\n         * ```\n         */\n        var templateProperties = Object.keys(tempAfterViewThis);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _i = 0, templateProperties_1 = templateProperties; _i < templateProperties_1.length; _i++) {\n            var tempName = templateProperties_1[_i];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName + 'Ref', tempAfterViewThis), tempAfterViewThis);\n        }\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        setTimeout(function () {\n            /* istanbul ignore else  */\n            if (typeof window !== 'undefined') {\n                tempAfterViewThis.appendTo(tempAfterViewThis.element);\n                tempAfterViewThis.ngEle.nativeElement.style.visibility = '';\n            }\n        });\n    };\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngOnDestroy = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempOnDestroyThis = isTempRef || this;\n        /* istanbul ignore else  */\n        if (typeof window !== 'undefined' && tempOnDestroyThis.element.classList.contains('e-control')) {\n            tempOnDestroyThis.destroy();\n            tempOnDestroyThis.clearTemplate(null);\n        }\n    };\n    //tslint:disable-next-line\n    ComponentBase.prototype.clearTemplate = function (templateNames, index) {\n        clearTemplate(this, templateNames, index);\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngAfterContentChecked = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempAfterContentThis = isTempRef || this;\n        for (var _i = 0, _a = tempAfterContentThis.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            if (!isUndefined(tagObject.instance) &&\n                (tagObject.instance.isInitChanges || tagObject.instance.hasChanges || tagObject.instance.hasNewChildren)) {\n                if (tagObject.instance.isInitChanges) {\n                    var propObj = {};\n                    // For angular 9 compatibility\n                    // Not able to get complex directive properties reference ni Onint hook\n                    // So we have constructed property here and used\n                    var complexDirProps = void 0;\n                    var list = getValue('instance.list', tagObject);\n                    if (list && list.length) {\n                        complexDirProps = list[0].directivePropList;\n                    }\n                    var skip = true;\n                    if (tempAfterContentThis.getModuleName && tempAfterContentThis.getModuleName() === 'gantt') {\n                        skip = false;\n                    }\n                    if (complexDirProps && skip && complexDirProps.indexOf(tagObject.instance.propertyName) === -1) {\n                        var compDirPropList = Object.keys(tagObject.instance.list[0].propCollection);\n                        for (var h = 0; h < tagObject.instance.list.length; h++) {\n                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName] = [];\n                            var obj = {};\n                            for (var k = 0; k < compDirPropList.length; k++) {\n                                var complexPropName = compDirPropList[k];\n                                obj[complexPropName] = tagObject.instance.list[h].propCollection[complexPropName];\n                            }\n                            for (var i = 0; i < tagObject.instance.list[h].tags.length; i++) {\n                                var tag = tagObject.instance.list[h].tags[i];\n                                var childObj = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tagObject.instance.list[h]);\n                                if (childObj) {\n                                    var innerchildObj = tagObject.instance.list[h]['child' + tag.substring(0, 1).toUpperCase() + tag.substring(1)];\n                                    if (innerchildObj) {\n                                        for (var j = 0; j < innerchildObj.list.length; j++) {\n                                            var innerTag = innerchildObj.list[0].tags[0];\n                                            if (innerTag) {\n                                                var innerchildTag = getValue('child' + innerTag.substring(0, 1).toUpperCase() + innerTag.substring(1), innerchildObj.list[j]);\n                                                innerchildObj.list[j].tagObjects.push({ instance: innerchildTag, name: innerTag });\n                                            }\n                                        }\n                                    }\n                                    tagObject.instance.list[h].tagObjects.push({ instance: childObj, name: tag });\n                                }\n                            }\n                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName].push(obj);\n                        }\n                    }\n                    // End angular 9 compatibility\n                    propObj[tagObject.name] = tagObject.instance.getProperties();\n                    tempAfterContentThis.setProperties(propObj, tagObject.instance.isInitChanges);\n                }\n                else {\n                    /* istanbul ignore next */\n                    var oldProbLength = tempAfterContentThis[tagObject.name].length;\n                    var newPropLendgth = tagObject.instance.list.length;\n                    if (oldProbLength !== newPropLendgth) {\n                        tempAfterContentThis[tagObject.name] = tagObject.instance.list;\n                    }\n                    for (var _b = 0, _c = tagObject.instance.list; _b < _c.length; _b++) {\n                        var list = _c[_b];\n                        var curIndex = tagObject.instance.list.indexOf(list);\n                        var curChild = getValue(tagObject.name, tempAfterContentThis)[curIndex];\n                        if (curChild !== undefined && curChild.setProperties !== undefined) {\n                            curChild.setProperties(list.getProperties());\n                        }\n                        list.isUpdated = true;\n                    }\n                }\n            }\n        }\n    };\n    ComponentBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this);\n    };\n    ComponentBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = getValue(prop, this.properties);\n        if (oldVal === newVal) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    ComponentBase.prototype.addTwoWay = function (propList) {\n        var _this = this;\n        var _loop_1 = function (prop) {\n            getValue(prop, this_1);\n            Object.defineProperty(this_1, prop, {\n                get: function () {\n                    return getValue(prop, _this.properties);\n                },\n                set: function (newVal) { return _this.twoWaySetter(newVal, prop); }\n            });\n            setValue(prop + 'Change', new EventEmitter(), this_1);\n        };\n        var this_1 = this;\n        for (var _i = 0, propList_1 = propList; _i < propList_1.length; _i++) {\n            var prop = propList_1[_i];\n            _loop_1(prop);\n        }\n    };\n    ComponentBase.prototype.addEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            if (!this.ngBoundedEvents[eventName]) {\n                this.ngBoundedEvents[eventName] = new Map();\n            }\n            this.ngBoundedEvents[eventName].set(handler, eventObj.subscribe(handler));\n        }\n    };\n    ComponentBase.prototype.removeEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            this.ngBoundedEvents[eventName].get(handler).unsubscribe();\n        }\n    };\n    ComponentBase.prototype.trigger = function (eventName, eventArgs, success) {\n        var eventObj = getValue(eventName, this);\n        var prevDetection = this.isProtectedOnChange;\n        this.isProtectedOnChange = false;\n        if (eventArgs) {\n            eventArgs.name = eventName;\n        }\n        if (!isUndefined(eventObj)) {\n            eventObj.next(eventArgs);\n        }\n        var localEventObj = getValue('local' + eventName.charAt(0).toUpperCase() + eventName.slice(1), this);\n        if (!isUndefined(localEventObj)) {\n            localEventObj.call(this, eventArgs);\n        }\n        this.isProtectedOnChange = prevDetection;\n        /* istanbul ignore else  */\n        if (success) {\n            success.call(this, eventArgs);\n        }\n    };\n    return ComponentBase;\n}());\nexport { ComponentBase };\n","import { getValue, setValue, isNullOrUndefined, isObject } from '@syncfusion/ej2-base';\n/**\n * Angular Form Base Module\n */\nvar FormBase = /** @class */ (function () {\n    function FormBase() {\n    }\n    FormBase.prototype.propagateChange = function (_) { return; };\n    FormBase.prototype.propagateTouch = function () { return; };\n    FormBase.prototype.localChange = function (e) {\n        //tslint:disable-next-line\n        var value = (e.checked === undefined ? e.value : e.checked);\n        this.objCheck = isObject(value);\n        if (this.objCheck === true) {\n            this.duplicateValue = JSON.stringify(value);\n            this.duplicateAngularValue = JSON.stringify(this.angularValue);\n            if (this.duplicateValue !== this.duplicateAngularValue && this.propagateChange !== undefined && value !== undefined) {\n                // Update angular from our control\n                this.propagateChange(value);\n                this.angularValue = value;\n            }\n        }\n        else {\n            if (value !== this.angularValue && this.propagateChange !== undefined && value !== undefined) {\n                // While reset form using reset() method ng-dirty not get updated, so while value is empty just update angularValue only\n                if (value !== '' && value !== null) {\n                    // Update angular from our control\n                    this.propagateChange(value);\n                    this.angularValue = value;\n                }\n                else {\n                    //tslint:disable-next-line\n                    var optionalValue = value;\n                    this.propagateChange(optionalValue);\n                    this.angularValue = value;\n                }\n            }\n        }\n    };\n    FormBase.prototype.registerOnChange = function (registerFunction) {\n        this.propagateChange = registerFunction;\n    };\n    FormBase.prototype.registerOnTouched = function (registerFunction) {\n        this.propagateTouch = registerFunction;\n    };\n    FormBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = getValue(prop, this.properties);\n        var ele = this.inputElement || this.element;\n        if (oldVal === newVal &&\n            (ele.value === undefined || ele.value === '')) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    // tslint:disable-next-line:no-any\n    FormBase.prototype.ngAfterViewInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempFormAfterViewThis = isTempRef || this;\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        // Removed setTimeout, Because we have called markForCheck() method in Angular Template Compiler\n        // setTimeout(() => {\n        /* istanbul ignore else */\n        if (typeof window !== 'undefined') {\n            tempFormAfterViewThis.appendTo(tempFormAfterViewThis.element);\n            var ele = tempFormAfterViewThis.inputElement || tempFormAfterViewThis.element;\n            ele.addEventListener('focus', tempFormAfterViewThis.ngOnFocus.bind(tempFormAfterViewThis));\n            ele.addEventListener('blur', tempFormAfterViewThis.ngOnBlur.bind(tempFormAfterViewThis));\n        }\n        // });\n    };\n    FormBase.prototype.setDisabledState = function (disabled) {\n        this.enabled = !disabled;\n        this.disabled = disabled;\n    };\n    FormBase.prototype.writeValue = function (value) {\n        var regExp = /ejs-radiobutton/g;\n        //update control value from angular\n        if (this.checked === undefined) {\n            this.value = value;\n        }\n        else {\n            // To resolve boolean type formControl value is not working for radio button control.\n            /* istanbul ignore next */\n            if (typeof value === 'boolean') {\n                if (this.ngEle && regExp.test(this.ngEle.nativeElement.outerHTML)) {\n                    this.checked = value === this.value;\n                }\n                else {\n                    this.checked = value;\n                }\n            }\n            else {\n                this.checked = value === this.value;\n            }\n        }\n        if (value === null) {\n            return;\n        }\n        this.angularValue = value;\n        // When binding Html textbox value to syncfusion textbox, change event triggered dynamically.\n        // To prevent change event, trigger change in component side based on `preventChange` value\n        this.preventChange = true;\n    };\n    FormBase.prototype.ngOnFocus = function (e) {\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.focus.emit(e);\n        }\n    };\n    FormBase.prototype.ngOnBlur = function (e) {\n        this.propagateTouch();\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.blur.emit(e);\n        }\n    };\n    FormBase.isFormBase = true;\n    return FormBase;\n}());\nexport { FormBase };\n"],"names":["applyMixins","derivedClass","baseClass","forEach","Object","getOwnPropertyNames","prototype","name","hasOwnProperty","isFormBase","registerEvents","eventList","obj","direct","ngEventsEmitter","length","_i","eventList_1","event_1","propCollection","EventEmitter","setProperties","clearTemplate","_this","templateNames","index","regTemplates","keys","registeredTemplate","regProperties","filter","val","test","_a","e","m","template","rootNodes","rt","destroy","_b","_c","destroyed","_view","pNode","renderer","parentNode","appendChild","_loop_1","tagObject","instance","RegExp","_d","_e","tagObjects","compile","templateEle","helper","stringCompiler","contRef_1","elementRef","nativeElement","_viewContainerRef","pName_1","propName","data","component","context","$implicit","conRef","viewContainerRef","viewRef","createEmbeddedView","markForCheck","viewCollection","getValue","push","ComplexBase","this","hasChanges","initChange","onChanges","dataSource","tags","ngOnInit","tag","objInstance","substring","toUpperCase","templateProperties","templateProperties_1","replace","setValue","propList","directivePropList","k","dirPropName","indexOf","ngOnChanges","changes","changedVal","currentValue","isUpdated","getProperties","isChanged","result","item","ngAfterContentChecked","templateProperties_2","ej2Base","ngAfterViewChecked","ArrayBase","propertyName","list","isInitChanges","ngAfterContentInit","children","map","child","property","onlyProp","isSourceChanged","childrenDataSource","i","JSON","stringify","j","constructor","hasNewChildren","ngAfterViewInit","ComponentBase","isProtectedOnChange","saveChanges","key","newValue","oldValue","oldProperties","changedProperties","finalUpdate","changeTime","setTimeout","dataBind","bind","clearTimeout","isTempRef","tempOnThis","ngBoundedEvents","isAngular","complexTemplate","ngAttr","getAngularAttr","element","createElement","tagName","prop","ele","srenderer","innerHTML","undefined","className","id","styles","setAttribute","attrs","attributes","complexTemplates","complexTemplates_1","ngAr","tempAfterViewThis","ngEle","outerHTML","style","visibility","window","appendTo","ngOnDestroy","tempOnDestroyThis","classList","contains","tempAfterContentThis","isUndefined","propObj","complexDirProps","skip","getModuleName","compDirPropList","h","complexPropName","childObj","innerchildObj","innerTag","innerchildTag","curIndex","curChild","twoWaySetter","newVal","oldVal","properties","isNullOrUndefined","emit","addTwoWay","this_1","defineProperty","get","set","propList_1","addEventListener","eventName","handler","eventObj","Map","subscribe","removeEventListener","unsubscribe","trigger","eventArgs","success","prevDetection","next","localEventObj","charAt","slice","call","FormBase","propagateChange","_","propagateTouch","localChange","value","checked","objCheck","isObject","duplicateValue","duplicateAngularValue","angularValue","optionalValue","registerOnChange","registerFunction","registerOnTouched","inputElement","tempFormAfterViewThis","ngOnFocus","ngOnBlur","setDisabledState","disabled","enabled","writeValue","preventChange","skipFromEvent","focus","blur","getTemplateEngine","setTemplateEngine","nameSpace","object","split","fromObj","defaultValue","target","propertyDescriptor","setter","getter","enumerable","configurable"],"mappings":"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"}